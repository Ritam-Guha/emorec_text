text,start,duration,end,dominant_emotion
hi my name is tessa pierce ward and i'd like to talk to you today about sour mesh protein camera sketches for large scents sour mesh is a command line and python,0.32,23.040000000000003,23.360000000000003,angry
library for skilled men hash analyses minhash methods have been around for a little while and they compress data sets into sketches composed of representative subset of their cameras um,12.16,24.559,36.719,angry
and uh we we know that long dna cameras uh camera sketches can be used for distance estimation between samples so we if we have a genome and genome b then the sketch is here,24.16,20.641,44.801,angry
we can compute the jaccard index the intersection over the union of those sketches and as was published in in 2015 2016 um the jaccard has a relationship to nuclear average nucleotide identity,35.12,25.68,60.8,angry
so we can get an estimate there sarah mesh actually uses a minhash variant scaled min hash which enables us to do both containment as well as jakarta index and in,47.84,19.28,67.12,happy
particular this enables comparisons between sets of different sizes the majority of minhash methods have focused on dna k-mers um which are most useful for differentiating between,57.84,25.6,83.44,happy
closely related sequences if we have a couple uh example 21 mirrors with two uh base pair differences in in many cases they are synonymous substitutions that uh end up as the same,70.24,24.4,94.63999999999999,angry
amino acid and in this example uh these two protein submers are exactly identical so this is um this is just to illustrate that protein sequences allow matching,82.32,18.399,100.719,angry
across anonymous substitution and of course we know this uh we've been using it for you know blast x uh protein blast for quite a long time and actually match screen is the first example of,91.92,19.119999999999997,111.03999999999999,angry
using uh protein k-mers for some identification we've been lately pursuing some other protein applications in particular we're exploring taxonomic classification,101.36,20.641,122.001,angry
there's some challenges in this realm uh reference databases are often incomplete uh highly divergent genomes sometimes cannot be classified or incomplete and contaminated genomes can can be,111.92,22.800000000000004,134.72,angry
misclassified and of course our goal is to enable real-time classification to keep up with the scale of incoming data so we've built a snake make workflow on top of star mesh,122.96,21.92,144.88,angry
that allows us to string a few commands together to do this so our first step is to use cymesh gather which is a greedy mintset cub algorithm to find the best genome match,134.16,22.240000000000002,156.4,angry
so to illustrate what this does we have a novel genome with some strain variation in there we can pick out the best reference,145.84,14.318999999999999,160.159,angry
genome here in flu and and here i'm just kind of representing these these two jams are uh different genuses but the same species um so they they're a little bit,152.48,18.8,171.28,angry
different there so we're able to get 60 match to to the blue genome and we can find an additional maybe 25 match to the other one,162.0,18.160999999999998,180.161,fear
and of course some is unmatched what we can do then um with the tax genome command is take the uh reference taxonomic lineages assigned to each of those best or matching reference genomes,170.48,23.598999999999997,194.07899999999998,angry
and we can uh transfer them on to the match percentages for our novel genome so in this case we're getting 60 to that species a and 25 to that that other reference genome species b,182.4,23.201,205.601,angry
but because these are non-overlapping matched regions or match percentages we can actually sum that to get um the percent match at the lowest uh the least common ancestor for these two so in in,194.4,26.240000000000002,220.64000000000001,angry
this case genus x has an 85 match so what we're using this for then is choosing a a percentage or a threshold for when we consider sufficient query match and we can assign um that,206.72,25.759999999999998,232.48,angry
classification that we get to to our novel genome okay so how well does this work uh we decided to do first a comparison with um gtd btk,220.4,25.038999999999998,245.439,happy
uh and we started out with a benchmark set of a thousand human gut uh metagenome genomes uh for magnify and uh and these are all likely to have similar genomes available in reference databases,232.56,27.919999999999998,260.48,happy
we got exact we found exact lineage matches for about 95 when using the full gcb recent release and the additional around four percent,247.2,22.16,269.36,angry
of it actually all matched at the genus level so so this is we think it's pretty doing pretty well even though we're using currently a very naive classification,257.759,17.358999999999998,275.118,angry
threshold of 10 of the query and we need to look into this a little bit further extending this to um an environmental set of samples we took 885 genomes from,266.479,22.242,288.721,angry
uh from the tara oceans from the delmont paper um i think neither of them really classified all of them but they got pretty close and here we had exact matches at about,277.36,17.519000000000002,294.879,happy
66 and some match at a higher lineage rank at 33 and if we break those down most of those lineage matches happen at the genus,286.8,17.04,303.84000000000003,NA
level so we got the exact same genius level uh classification but uh a different species was selected as the as the uh exact classification so we need to look,295.28,23.84,319.11999999999995,NA
into those differences there uh but it's promising uh because this is a really lightweight whole camera or whole protium camera based classification which means it's likely going to be a,306.56,22.961,329.521,NA
little more uh robust to incomplete and contaminated genomes and then of course because it's camera-based it offers near real-time classification and with that i'd like to thank you so much for,318.0,17.36,335.36,NA
listening um and please do find us on gitter github uh and and everywhere else on the internet for for questions and contributions thank you,326.96,18.158,345.118,NA
